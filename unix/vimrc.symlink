set nocompatible  " Disable compatibility with vi which can cause unexpected issues

" Settings with file types
filetype on  " Enable type file detection
filetype plugin on  " Enable plugins and load plugins for file type
filetype indent on  " Load indent file for file type

" Visual settings
syntax on  " Syntax highlighting on
set nu rnu  " Hybrid line numbers
set cursorline  " Highlight cursor line
set cursorcolumn  " Highlight cursor column

" Tab settings
set shiftwidth=4  " Indent/outdent by 4 columns
set shiftround  " Always indent/outdent to the nearest tab stop
set tabstop=4  " Tab spacing
set softtabstop=4  " Unify
set expandtab  " Use spaces instead of tabs
set nowrap  " Do not wrap lines

" Search settings
set nohlsearch  " Don't highlight after search
set incsearch  " Incrementally highlight matching search
set ignorecase  " Ignore capital letters during search
set smartcase  " Override ignorecase if search has capital letters
set showmatch  " Show matching word during search

" Functional settings
set showcmd  " Show partial command typed
set showmode  " Show mode
set history=1000  " Set commands to save in history
set wildmenu  " Enable auto completion menu
set wildmode=list:longest  " Make wildmenu similar to Bash completion

set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx  " Ignore some files that we will never edit with Vim


" Plugins
"" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif
"" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif
call plug#begin(has('nvim') ? stdpath('data') . '/plugged' : '~/.vim/plugged')  " Download plugins to directory

"" List of plugins
Plug 'joshdick/onedark.vim'
Plug 'vim-airline/vim-airline'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'airblade/vim-gitgutter'

call plug#end()

let g:airline_theme='onedark'
colorscheme onedark

" Key mappings
"" Leader as space key
nnoremap <space> <nop>
let mapleader = " "

inoremap jk <esc>  " jk for ESC
nnoremap <leader>w :w!<CR>  " <leader>w to save file
nnoremap <leader>/ :nohl<CR>  " <leader>/ turn off highlight when searching
